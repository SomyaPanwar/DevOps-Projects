step - 1 (create a cluster) -> eksctl create cluster --name demo-cluster --region us-east-1 --fargate

step - 2 (create a fargate profile dedicated for the app) -> eksctl create fargateprofile --cluster demo-cluster --region us-east-1 --name alb-sample-app --namespace game-2048

step - 3 (deploy 2048 game app) -> kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.5.4/docs/examples/2048/2048_full.yaml

yaml file contains -> 	namespace/game-2048 created
			deployment.apps/deployment-2048 created
			service/service-2048 created
			ingress.networking.k8s.io/ingress-2048 created

step - 4 (IAM policy for AWS ALB ingress controller) -> aws iam create-policy --policy-name AWSLoadBalancerControllerIAMPolicy 
										--policy-document file://iam_policy.json

step -5 (create IAM Service account for AWS ALB ingress controller) ->eksctl create iamserviceaccount  
									--cluster=demo-cluster 
									--region us-east-1 
									--namespace=kube-system 
									--name=aws-load-balancer-controller 
									--role-name AmazonEKSLoadBalancerControllerRole 
									--attach-policy-arn=arn:aws:iam::084375543267:policy/AWSLoadBalancerControllerIAMPolicy --approve

step - 6 ( deploying AWS ALB controller) ->
						helm install aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system 
						--set clusterName=demo-cluster 
						--set serviceAccount.create=false 
						--set serviceAccount.name=aws-load-balancer-controller 
						--set region=us-east-1 
						--set vpcId=vpc-03eb52af98c3790b3

step - 7 ( to get the address of the application) -> kubectl get ingress -n game-2048
